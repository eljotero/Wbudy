ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 1


   1              		.cpu arm7tdmi
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"lm75.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  17              	.LC0:
  18 0000 256400   		.ascii	"%d\000"
  19              		.text
  20              		.align	1
  21              		.global	measureTemperature
  22              		.syntax unified
  23              		.code	16
  24              		.thumb_func
  25              		.fpu softvfp
  26              		.type	measureTemperature, %function
  27              	measureTemperature:
  28              	.LFB0:
  29              		.file 1 "lm75.c"
   1:lm75.c        **** /******************************************************************************
   2:lm75.c        ****  *  Obsługa pomiaru temperatury przy pomocy temometru LM75.
   3:lm75.c        ****  * 
   4:lm75.c        ****  *  Plik z kodem źródłowym funkcji.
   5:lm75.c        ****  *****************************************************************************/
   6:lm75.c        **** 
   7:lm75.c        **** /******************************************************************************
   8:lm75.c        ****  * Includes
   9:lm75.c        ****  *****************************************************************************/
  10:lm75.c        **** 
  11:lm75.c        **** #include "lm75.h"
  12:lm75.c        **** 
  13:lm75.c        **** /******************************************************************************
  14:lm75.c        ****  * Defines and typedefs
  15:lm75.c        ****  *****************************************************************************/
  16:lm75.c        **** 
  17:lm75.c        **** #define lm75Address         0x48 // 0x48 = 0b 0100 1000
  18:lm75.c        **** #define lm75ReadAddress     0X91 // 0X91 = 0b 1001 0001
  19:lm75.c        **** #define lm75WriteAddress    0X90 // 0X90 = 0b 1001 0000
  20:lm75.c        **** #define lm75AddressSoldered         0x4F // 0x4F = 0b 0100 1111
  21:lm75.c        **** #define lm75ReadAddressSoldered     0x9F // 0x9F = 0b 1001 1111
  22:lm75.c        **** #define lm75WriteAddressSoldered    0x9E // 0x9E = 0b 1001 1110
  23:lm75.c        **** 
  24:lm75.c        **** /*****************************************************************************
  25:lm75.c        ****  * Global variables
  26:lm75.c        ****  ****************************************************************************/
  27:lm75.c        **** 
  28:lm75.c        **** /*****************************************************************************
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 2


  29:lm75.c        ****  * Local variables
  30:lm75.c        ****  ****************************************************************************/
  31:lm75.c        **** 
  32:lm75.c        **** /*****************************************************************************
  33:lm75.c        ****  * Local prototypes
  34:lm75.c        ****  ****************************************************************************/
  35:lm75.c        **** 
  36:lm75.c        **** /*
  37:lm75.c        ****  * @brief   Funkcja measureTemperature() jest wykorzystywana do odczytania z urządzenia LM75 niepr
  38:lm75.c        ****  *          temperatury, oraz jej przeliczenie na prawidłową, aktualnie występującą temperatur
  39:lm75.c        ****  *          Celsjusza.
  40:lm75.c        ****  *
  41:lm75.c        ****  * @param   void
  42:lm75.c        ****  *
  43:lm75.c        ****  * @returns void
  44:lm75.c        ****  *
  45:lm75.c        ****  * @side effects:
  46:lm75.c        ****  *          Wartość temperatury podana jest z dokładnością do 0.5 stopnia Celsjusza, co stanow
  47:lm75.c        ****  *          termometru LM75 (jednostkową, minimalną różnicę pomiędzy temperaturami).
  48:lm75.c        ****  */
  49:lm75.c        **** 
  50:lm75.c        **** void measureTemperature(void)
  51:lm75.c        **** {
  30              		.loc 1 51 0
  31              		.cfi_startproc
  32              		@ Function supports interworking.
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 B0B5     		push	{r4, r5, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 86B0     		sub	sp, sp, #24
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  52:lm75.c        ****     // Variable holding result of I2C operation.
  53:lm75.c        ****     tU8 retCode = 0;
  48              		.loc 1 53 0
  49 0006 1325     		movs	r5, #19
  50 0008 7B19     		adds	r3, r7, r5
  51 000a 0022     		movs	r2, #0
  52 000c 1A70     		strb	r2, [r3]
  54:lm75.c        **** 
  55:lm75.c        ****     // Buffer for read temperature values
  56:lm75.c        ****     tU8 readTemperature[2] = {0};
  53              		.loc 1 56 0
  54 000e 1024     		movs	r4, #16
  55 0010 3B19     		adds	r3, r7, r4
  56 0012 0022     		movs	r2, #0
  57 0014 1A80     		strh	r2, [r3]
  57:lm75.c        **** 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 3


  58:lm75.c        ****     // Reading temperature value from LM75 device
  59:lm75.c        ****     retCode = i2cRead(lm75ReadAddress, readTemperature, 2);
  58              		.loc 1 59 0
  59 0016 3B19     		adds	r3, r7, r4
  60 0018 0222     		movs	r2, #2
  61 001a 1900     		movs	r1, r3
  62 001c 9120     		movs	r0, #145
  63 001e FFF7FEFF 		bl	i2cRead
  64 0022 0300     		movs	r3, r0
  65 0024 1A00     		movs	r2, r3
  66 0026 7B19     		adds	r3, r7, r5
  67 0028 1A70     		strb	r2, [r3]
  60:lm75.c        **** 
  61:lm75.c        ****     // Char array used for storing temperature to be shown to the user.
  62:lm75.c        ****     tU8 charArray[10] = {0};
  68              		.loc 1 62 0
  69 002a 3B1D     		adds	r3, r7, #4
  70 002c 1800     		movs	r0, r3
  71 002e 0A23     		movs	r3, #10
  72 0030 1A00     		movs	r2, r3
  73 0032 0021     		movs	r1, #0
  74 0034 FFF7FEFF 		bl	memset
  63:lm75.c        **** 
  64:lm75.c        ****     // Variable for string integer part of the temperature
  65:lm75.c        ****     // Since the temperature can be negative (when the 8-th bit is up then this variable must be tS
  66:lm75.c        ****     tS8 calculatedValue = readTemperature[0];
  75              		.loc 1 66 0
  76 0038 3B19     		adds	r3, r7, r4
  77 003a 1A78     		ldrb	r2, [r3]
  78 003c 1721     		movs	r1, #23
  79 003e 7B18     		adds	r3, r7, r1
  80 0040 1A70     		strb	r2, [r3]
  67:lm75.c        **** 
  68:lm75.c        ****     // Flag indicating whether temperature value is below zero or not.
  69:lm75.c        ****     tU8 isNegative = 0;
  81              		.loc 1 69 0
  82 0042 1623     		movs	r3, #22
  83 0044 FB18     		adds	r3, r7, r3
  84 0046 0022     		movs	r2, #0
  85 0048 1A70     		strb	r2, [r3]
  70:lm75.c        **** 
  71:lm75.c        ****     // Flag indicating whether it is required to add 0.5 Celsius degree to measured temperature.
  72:lm75.c        ****     tU8 appendHalf = 0;
  86              		.loc 1 72 0
  87 004a 1523     		movs	r3, #21
  88 004c FB18     		adds	r3, r7, r3
  89 004e 0022     		movs	r2, #0
  90 0050 1A70     		strb	r2, [r3]
  73:lm75.c        **** 
  74:lm75.c        ****     if (calculatedValue < 0) {
  91              		.loc 1 74 0
  92 0052 7B18     		adds	r3, r7, r1
  93 0054 1B78     		ldrb	r3, [r3]
  94 0056 7F2B     		cmp	r3, #127
  95 0058 03D9     		bls	.L2
  75:lm75.c        ****     	// Case for negative temperature - if temperature is in fact below zero, then adding 0.5 degre
  76:lm75.c        ****         isNegative = 1;
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 4


  96              		.loc 1 76 0
  97 005a 1623     		movs	r3, #22
  98 005c FB18     		adds	r3, r7, r3
  99 005e 0122     		movs	r2, #1
 100 0060 1A70     		strb	r2, [r3]
 101              	.L2:
  77:lm75.c        ****     }
  78:lm75.c        ****     if ((isNegative == (tU8)1) && ((readTemperature[1] & (tU8)0x80) == (tU8)0x80)){
 102              		.loc 1 78 0
 103 0062 1623     		movs	r3, #22
 104 0064 FB18     		adds	r3, r7, r3
 105 0066 1B78     		ldrb	r3, [r3]
 106 0068 012B     		cmp	r3, #1
 107 006a 12D1     		bne	.L3
 108              		.loc 1 78 0 is_stmt 0 discriminator 1
 109 006c 1023     		movs	r3, #16
 110 006e FB18     		adds	r3, r7, r3
 111 0070 5B78     		ldrb	r3, [r3, #1]
 112 0072 1B06     		lsls	r3, r3, #24
 113 0074 1B16     		asrs	r3, r3, #24
 114 0076 0CD5     		bpl	.L3
  79:lm75.c        ****         // Case for temperature that is negative and most significant bit in LSB (that is for 0.5 d
  80:lm75.c        ****         calculatedValue = calculatedValue + (tS8)1;
 115              		.loc 1 80 0 is_stmt 1
 116 0078 1721     		movs	r1, #23
 117 007a 7B18     		adds	r3, r7, r1
 118 007c 1B78     		ldrb	r3, [r3]
 119 007e 0133     		adds	r3, r3, #1
 120 0080 1B06     		lsls	r3, r3, #24
 121 0082 1A0E     		lsrs	r2, r3, #24
 122 0084 7B18     		adds	r3, r7, r1
 123 0086 1A70     		strb	r2, [r3]
  81:lm75.c        ****     	appendHalf = 1;
 124              		.loc 1 81 0
 125 0088 1523     		movs	r3, #21
 126 008a FB18     		adds	r3, r7, r3
 127 008c 0122     		movs	r2, #1
 128 008e 1A70     		strb	r2, [r3]
 129 0090 0EE0     		b	.L4
 130              	.L3:
  82:lm75.c        ****     } else if ((isNegative == (tU8)0) && ((readTemperature[1] & (tU8)0x80) == (tU8)0x80)) {
 131              		.loc 1 82 0
 132 0092 1623     		movs	r3, #22
 133 0094 FB18     		adds	r3, r7, r3
 134 0096 1B78     		ldrb	r3, [r3]
 135 0098 002B     		cmp	r3, #0
 136 009a 09D1     		bne	.L4
 137              		.loc 1 82 0 is_stmt 0 discriminator 1
 138 009c 1023     		movs	r3, #16
 139 009e FB18     		adds	r3, r7, r3
 140 00a0 5B78     		ldrb	r3, [r3, #1]
 141 00a2 1B06     		lsls	r3, r3, #24
 142 00a4 1B16     		asrs	r3, r3, #24
 143 00a6 03D5     		bpl	.L4
  83:lm75.c        ****         // Case for temperature that is non negative and most significant bit in LSB (that is for 0
  84:lm75.c        ****     	appendHalf = 1;
 144              		.loc 1 84 0 is_stmt 1
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 5


 145 00a8 1523     		movs	r3, #21
 146 00aa FB18     		adds	r3, r7, r3
 147 00ac 0122     		movs	r2, #1
 148 00ae 1A70     		strb	r2, [r3]
 149              	.L4:
  85:lm75.c        ****     } else {
  86:lm75.c        ****         ;
  87:lm75.c        ****     }
  88:lm75.c        **** 
  89:lm75.c        ****     // Variable used as iterator in a loop.
  90:lm75.c        **** 	tU8 i = 0;
 150              		.loc 1 90 0
 151 00b0 1423     		movs	r3, #20
 152 00b2 FB18     		adds	r3, r7, r3
 153 00b4 0022     		movs	r2, #0
 154 00b6 1A70     		strb	r2, [r3]
  91:lm75.c        **** 
  92:lm75.c        ****     // Parsing calculatedValue into charArray to change it accroding to appendHalf flag value
  93:lm75.c        ****     retCode = sprintf(charArray, "%d", calculatedValue);
 155              		.loc 1 93 0
 156 00b8 1723     		movs	r3, #23
 157 00ba FB18     		adds	r3, r7, r3
 158 00bc 0022     		movs	r2, #0
 159 00be 9A56     		ldrsb	r2, [r3, r2]
 160 00c0 2349     		ldr	r1, .L9
 161 00c2 3B1D     		adds	r3, r7, #4
 162 00c4 1800     		movs	r0, r3
 163 00c6 FFF7FEFF 		bl	sprintf
 164 00ca 0200     		movs	r2, r0
 165 00cc 1323     		movs	r3, #19
 166 00ce FB18     		adds	r3, r7, r3
 167 00d0 1A70     		strb	r2, [r3]
  94:lm75.c        **** 
  95:lm75.c        ****     while(charArray[i] != (tU8)0) {
 168              		.loc 1 95 0
 169 00d2 05E0     		b	.L5
 170              	.L6:
  96:lm75.c        ****         i = i + (tU8)1;
 171              		.loc 1 96 0
 172 00d4 1422     		movs	r2, #20
 173 00d6 BB18     		adds	r3, r7, r2
 174 00d8 BA18     		adds	r2, r7, r2
 175 00da 1278     		ldrb	r2, [r2]
 176 00dc 0132     		adds	r2, r2, #1
 177 00de 1A70     		strb	r2, [r3]
 178              	.L5:
  95:lm75.c        ****         i = i + (tU8)1;
 179              		.loc 1 95 0
 180 00e0 1423     		movs	r3, #20
 181 00e2 FB18     		adds	r3, r7, r3
 182 00e4 1B78     		ldrb	r3, [r3]
 183 00e6 3A1D     		adds	r2, r7, #4
 184 00e8 D35C     		ldrb	r3, [r2, r3]
 185 00ea 002B     		cmp	r3, #0
 186 00ec F2D1     		bne	.L6
  97:lm75.c        ****     }
  98:lm75.c        **** 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 6


  99:lm75.c        ****     charArray[i] = '.';
 187              		.loc 1 99 0
 188 00ee 1423     		movs	r3, #20
 189 00f0 FB18     		adds	r3, r7, r3
 190 00f2 1B78     		ldrb	r3, [r3]
 191 00f4 3A1D     		adds	r2, r7, #4
 192 00f6 2E21     		movs	r1, #46
 193 00f8 D154     		strb	r1, [r2, r3]
 100:lm75.c        ****     if (appendHalf == (tU8)1) {
 194              		.loc 1 100 0
 195 00fa 1523     		movs	r3, #21
 196 00fc FB18     		adds	r3, r7, r3
 197 00fe 1B78     		ldrb	r3, [r3]
 198 0100 012B     		cmp	r3, #1
 199 0102 07D1     		bne	.L7
 101:lm75.c        ****         charArray[i + (tU8)1] = '5';
 200              		.loc 1 101 0
 201 0104 1423     		movs	r3, #20
 202 0106 FB18     		adds	r3, r7, r3
 203 0108 1B78     		ldrb	r3, [r3]
 204 010a 0133     		adds	r3, r3, #1
 205 010c 3A1D     		adds	r2, r7, #4
 206 010e 3521     		movs	r1, #53
 207 0110 D154     		strb	r1, [r2, r3]
 208 0112 06E0     		b	.L8
 209              	.L7:
 102:lm75.c        ****     } else {
 103:lm75.c        ****         charArray[i + (tU8)1] = '0';
 210              		.loc 1 103 0
 211 0114 1423     		movs	r3, #20
 212 0116 FB18     		adds	r3, r7, r3
 213 0118 1B78     		ldrb	r3, [r3]
 214 011a 0133     		adds	r3, r3, #1
 215 011c 3A1D     		adds	r2, r7, #4
 216 011e 3021     		movs	r1, #48
 217 0120 D154     		strb	r1, [r2, r3]
 218              	.L8:
 104:lm75.c        ****     }
 105:lm75.c        **** 
 106:lm75.c        ****     charArray[i + 2] = ' ';
 219              		.loc 1 106 0
 220 0122 1420     		movs	r0, #20
 221 0124 3B18     		adds	r3, r7, r0
 222 0126 1B78     		ldrb	r3, [r3]
 223 0128 0233     		adds	r3, r3, #2
 224 012a 3A1D     		adds	r2, r7, #4
 225 012c 2021     		movs	r1, #32
 226 012e D154     		strb	r1, [r2, r3]
 107:lm75.c        ****     charArray[i + 3] = 'C';
 227              		.loc 1 107 0
 228 0130 3B18     		adds	r3, r7, r0
 229 0132 1B78     		ldrb	r3, [r3]
 230 0134 0333     		adds	r3, r3, #3
 231 0136 3A1D     		adds	r2, r7, #4
 232 0138 4321     		movs	r1, #67
 233 013a D154     		strb	r1, [r2, r3]
 108:lm75.c        **** 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 7


 109:lm75.c        ****     lcdPuts(charArray);
 234              		.loc 1 109 0
 235 013c 3B1D     		adds	r3, r7, #4
 236 013e 1800     		movs	r0, r3
 237 0140 FFF7FEFF 		bl	lcdPuts
 110:lm75.c        **** }
 238              		.loc 1 110 0
 239 0144 C046     		nop
 240 0146 BD46     		mov	sp, r7
 241 0148 06B0     		add	sp, sp, #24
 242              		@ sp needed
 243 014a B0BC     		pop	{r4, r5, r7}
 244 014c 01BC     		pop	{r0}
 245 014e 0047     		bx	r0
 246              	.L10:
 247              		.align	2
 248              	.L9:
 249 0150 00000000 		.word	.LC0
 250              		.cfi_endproc
 251              	.LFE0:
 252              		.size	measureTemperature, .-measureTemperature
 253              	.Letext0:
 254              		.file 2 "general.h"
 255              		.file 3 "<built-in>"
 256              		.section	.debug_info,"",%progbits
 257              	.Ldebug_info0:
 258 0000 3D010000 		.4byte	0x13d
 259 0004 0200     		.2byte	0x2
 260 0006 00000000 		.4byte	.Ldebug_abbrev0
 261 000a 04       		.byte	0x4
 262 000b 01       		.uleb128 0x1
 263 000c 73000000 		.4byte	.LASF14
 264 0010 0C       		.byte	0xc
 265 0011 4F010000 		.4byte	.LASF15
 266 0015 FE000000 		.4byte	.LASF16
 267 0019 00000000 		.4byte	.Ltext0
 268 001d 54010000 		.4byte	.Letext0
 269 0021 00000000 		.4byte	.Ldebug_line0
 270 0025 02       		.uleb128 0x2
 271 0026 74553800 		.ascii	"tU8\000"
 272 002a 02       		.byte	0x2
 273 002b 20       		.byte	0x20
 274 002c 30000000 		.4byte	0x30
 275 0030 03       		.uleb128 0x3
 276 0031 01       		.byte	0x1
 277 0032 08       		.byte	0x8
 278 0033 60000000 		.4byte	.LASF0
 279 0037 03       		.uleb128 0x3
 280 0038 02       		.byte	0x2
 281 0039 07       		.byte	0x7
 282 003a 1C010000 		.4byte	.LASF1
 283 003e 03       		.uleb128 0x3
 284 003f 04       		.byte	0x4
 285 0040 07       		.byte	0x7
 286 0041 21000000 		.4byte	.LASF2
 287 0045 03       		.uleb128 0x3
 288 0046 08       		.byte	0x8
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 8


 289 0047 07       		.byte	0x7
 290 0048 49000000 		.4byte	.LASF3
 291 004c 02       		.uleb128 0x2
 292 004d 74533800 		.ascii	"tS8\000"
 293 0051 02       		.byte	0x2
 294 0052 24       		.byte	0x24
 295 0053 57000000 		.4byte	0x57
 296 0057 03       		.uleb128 0x3
 297 0058 01       		.byte	0x1
 298 0059 06       		.byte	0x6
 299 005a 2F010000 		.4byte	.LASF4
 300 005e 03       		.uleb128 0x3
 301 005f 02       		.byte	0x2
 302 0060 05       		.byte	0x5
 303 0061 45010000 		.4byte	.LASF5
 304 0065 04       		.uleb128 0x4
 305 0066 04       		.byte	0x4
 306 0067 05       		.byte	0x5
 307 0068 696E7400 		.ascii	"int\000"
 308 006c 03       		.uleb128 0x3
 309 006d 08       		.byte	0x8
 310 006e 05       		.byte	0x5
 311 006f 00000000 		.4byte	.LASF6
 312 0073 05       		.uleb128 0x5
 313 0074 01       		.byte	0x1
 314 0075 0E000000 		.4byte	.LASF17
 315 0079 01       		.byte	0x1
 316 007a 32       		.byte	0x32
 317 007b 01       		.byte	0x1
 318 007c 00000000 		.4byte	.LFB0
 319 0080 54010000 		.4byte	.LFE0
 320 0084 00000000 		.4byte	.LLST0
 321 0088 01       		.byte	0x1
 322 0089 08010000 		.4byte	0x108
 323 008d 06       		.uleb128 0x6
 324 008e 2E000000 		.4byte	.LASF7
 325 0092 01       		.byte	0x1
 326 0093 35       		.byte	0x35
 327 0094 25000000 		.4byte	0x25
 328 0098 02       		.byte	0x2
 329 0099 91       		.byte	0x91
 330 009a 6B       		.sleb128 -21
 331 009b 06       		.uleb128 0x6
 332 009c 56010000 		.4byte	.LASF8
 333 00a0 01       		.byte	0x1
 334 00a1 38       		.byte	0x38
 335 00a2 08010000 		.4byte	0x108
 336 00a6 02       		.byte	0x2
 337 00a7 91       		.byte	0x91
 338 00a8 68       		.sleb128 -24
 339 00a9 06       		.uleb128 0x6
 340 00aa 3B010000 		.4byte	.LASF9
 341 00ae 01       		.byte	0x1
 342 00af 3E       		.byte	0x3e
 343 00b0 18010000 		.4byte	0x118
 344 00b4 02       		.byte	0x2
 345 00b5 91       		.byte	0x91
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 9


 346 00b6 5C       		.sleb128 -36
 347 00b7 06       		.uleb128 0x6
 348 00b8 66010000 		.4byte	.LASF10
 349 00bc 01       		.byte	0x1
 350 00bd 42       		.byte	0x42
 351 00be 4C000000 		.4byte	0x4c
 352 00c2 02       		.byte	0x2
 353 00c3 91       		.byte	0x91
 354 00c4 6F       		.sleb128 -17
 355 00c5 06       		.uleb128 0x6
 356 00c6 3E000000 		.4byte	.LASF11
 357 00ca 01       		.byte	0x1
 358 00cb 45       		.byte	0x45
 359 00cc 25000000 		.4byte	0x25
 360 00d0 02       		.byte	0x2
 361 00d1 91       		.byte	0x91
 362 00d2 6E       		.sleb128 -18
 363 00d3 06       		.uleb128 0x6
 364 00d4 F3000000 		.4byte	.LASF12
 365 00d8 01       		.byte	0x1
 366 00d9 48       		.byte	0x48
 367 00da 25000000 		.4byte	0x25
 368 00de 02       		.byte	0x2
 369 00df 91       		.byte	0x91
 370 00e0 6D       		.sleb128 -19
 371 00e1 07       		.uleb128 0x7
 372 00e2 6900     		.ascii	"i\000"
 373 00e4 01       		.byte	0x1
 374 00e5 5A       		.byte	0x5a
 375 00e6 25000000 		.4byte	0x25
 376 00ea 02       		.byte	0x2
 377 00eb 91       		.byte	0x91
 378 00ec 6C       		.sleb128 -20
 379 00ed 08       		.uleb128 0x8
 380 00ee 01       		.byte	0x1
 381 00ef 36000000 		.4byte	.LASF18
 382 00f3 03       		.byte	0x3
 383 00f4 00       		.byte	0
 384 00f5 01       		.byte	0x1
 385 00f6 65000000 		.4byte	0x65
 386 00fa 01       		.byte	0x1
 387 00fb 09       		.uleb128 0x9
 388 00fc 28010000 		.4byte	0x128
 389 0100 09       		.uleb128 0x9
 390 0101 3A010000 		.4byte	0x13a
 391 0105 0A       		.uleb128 0xa
 392 0106 00       		.byte	0
 393 0107 00       		.byte	0
 394 0108 0B       		.uleb128 0xb
 395 0109 25000000 		.4byte	0x25
 396 010d 18010000 		.4byte	0x118
 397 0111 0C       		.uleb128 0xc
 398 0112 3E000000 		.4byte	0x3e
 399 0116 01       		.byte	0x1
 400 0117 00       		.byte	0
 401 0118 0B       		.uleb128 0xb
 402 0119 25000000 		.4byte	0x25
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 10


 403 011d 28010000 		.4byte	0x128
 404 0121 0C       		.uleb128 0xc
 405 0122 3E000000 		.4byte	0x3e
 406 0126 09       		.byte	0x9
 407 0127 00       		.byte	0
 408 0128 0D       		.uleb128 0xd
 409 0129 04       		.byte	0x4
 410 012a 2E010000 		.4byte	0x12e
 411 012e 03       		.uleb128 0x3
 412 012f 01       		.byte	0x1
 413 0130 08       		.byte	0x8
 414 0131 6E000000 		.4byte	.LASF13
 415 0135 0E       		.uleb128 0xe
 416 0136 2E010000 		.4byte	0x12e
 417 013a 0D       		.uleb128 0xd
 418 013b 04       		.byte	0x4
 419 013c 35010000 		.4byte	0x135
 420 0140 00       		.byte	0
 421              		.section	.debug_abbrev,"",%progbits
 422              	.Ldebug_abbrev0:
 423 0000 01       		.uleb128 0x1
 424 0001 11       		.uleb128 0x11
 425 0002 01       		.byte	0x1
 426 0003 25       		.uleb128 0x25
 427 0004 0E       		.uleb128 0xe
 428 0005 13       		.uleb128 0x13
 429 0006 0B       		.uleb128 0xb
 430 0007 03       		.uleb128 0x3
 431 0008 0E       		.uleb128 0xe
 432 0009 1B       		.uleb128 0x1b
 433 000a 0E       		.uleb128 0xe
 434 000b 11       		.uleb128 0x11
 435 000c 01       		.uleb128 0x1
 436 000d 12       		.uleb128 0x12
 437 000e 01       		.uleb128 0x1
 438 000f 10       		.uleb128 0x10
 439 0010 06       		.uleb128 0x6
 440 0011 00       		.byte	0
 441 0012 00       		.byte	0
 442 0013 02       		.uleb128 0x2
 443 0014 16       		.uleb128 0x16
 444 0015 00       		.byte	0
 445 0016 03       		.uleb128 0x3
 446 0017 08       		.uleb128 0x8
 447 0018 3A       		.uleb128 0x3a
 448 0019 0B       		.uleb128 0xb
 449 001a 3B       		.uleb128 0x3b
 450 001b 0B       		.uleb128 0xb
 451 001c 49       		.uleb128 0x49
 452 001d 13       		.uleb128 0x13
 453 001e 00       		.byte	0
 454 001f 00       		.byte	0
 455 0020 03       		.uleb128 0x3
 456 0021 24       		.uleb128 0x24
 457 0022 00       		.byte	0
 458 0023 0B       		.uleb128 0xb
 459 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 11


 460 0025 3E       		.uleb128 0x3e
 461 0026 0B       		.uleb128 0xb
 462 0027 03       		.uleb128 0x3
 463 0028 0E       		.uleb128 0xe
 464 0029 00       		.byte	0
 465 002a 00       		.byte	0
 466 002b 04       		.uleb128 0x4
 467 002c 24       		.uleb128 0x24
 468 002d 00       		.byte	0
 469 002e 0B       		.uleb128 0xb
 470 002f 0B       		.uleb128 0xb
 471 0030 3E       		.uleb128 0x3e
 472 0031 0B       		.uleb128 0xb
 473 0032 03       		.uleb128 0x3
 474 0033 08       		.uleb128 0x8
 475 0034 00       		.byte	0
 476 0035 00       		.byte	0
 477 0036 05       		.uleb128 0x5
 478 0037 2E       		.uleb128 0x2e
 479 0038 01       		.byte	0x1
 480 0039 3F       		.uleb128 0x3f
 481 003a 0C       		.uleb128 0xc
 482 003b 03       		.uleb128 0x3
 483 003c 0E       		.uleb128 0xe
 484 003d 3A       		.uleb128 0x3a
 485 003e 0B       		.uleb128 0xb
 486 003f 3B       		.uleb128 0x3b
 487 0040 0B       		.uleb128 0xb
 488 0041 27       		.uleb128 0x27
 489 0042 0C       		.uleb128 0xc
 490 0043 11       		.uleb128 0x11
 491 0044 01       		.uleb128 0x1
 492 0045 12       		.uleb128 0x12
 493 0046 01       		.uleb128 0x1
 494 0047 40       		.uleb128 0x40
 495 0048 06       		.uleb128 0x6
 496 0049 9642     		.uleb128 0x2116
 497 004b 0C       		.uleb128 0xc
 498 004c 01       		.uleb128 0x1
 499 004d 13       		.uleb128 0x13
 500 004e 00       		.byte	0
 501 004f 00       		.byte	0
 502 0050 06       		.uleb128 0x6
 503 0051 34       		.uleb128 0x34
 504 0052 00       		.byte	0
 505 0053 03       		.uleb128 0x3
 506 0054 0E       		.uleb128 0xe
 507 0055 3A       		.uleb128 0x3a
 508 0056 0B       		.uleb128 0xb
 509 0057 3B       		.uleb128 0x3b
 510 0058 0B       		.uleb128 0xb
 511 0059 49       		.uleb128 0x49
 512 005a 13       		.uleb128 0x13
 513 005b 02       		.uleb128 0x2
 514 005c 0A       		.uleb128 0xa
 515 005d 00       		.byte	0
 516 005e 00       		.byte	0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 12


 517 005f 07       		.uleb128 0x7
 518 0060 34       		.uleb128 0x34
 519 0061 00       		.byte	0
 520 0062 03       		.uleb128 0x3
 521 0063 08       		.uleb128 0x8
 522 0064 3A       		.uleb128 0x3a
 523 0065 0B       		.uleb128 0xb
 524 0066 3B       		.uleb128 0x3b
 525 0067 0B       		.uleb128 0xb
 526 0068 49       		.uleb128 0x49
 527 0069 13       		.uleb128 0x13
 528 006a 02       		.uleb128 0x2
 529 006b 0A       		.uleb128 0xa
 530 006c 00       		.byte	0
 531 006d 00       		.byte	0
 532 006e 08       		.uleb128 0x8
 533 006f 2E       		.uleb128 0x2e
 534 0070 01       		.byte	0x1
 535 0071 3F       		.uleb128 0x3f
 536 0072 0C       		.uleb128 0xc
 537 0073 03       		.uleb128 0x3
 538 0074 0E       		.uleb128 0xe
 539 0075 3A       		.uleb128 0x3a
 540 0076 0B       		.uleb128 0xb
 541 0077 3B       		.uleb128 0x3b
 542 0078 0B       		.uleb128 0xb
 543 0079 27       		.uleb128 0x27
 544 007a 0C       		.uleb128 0xc
 545 007b 49       		.uleb128 0x49
 546 007c 13       		.uleb128 0x13
 547 007d 3C       		.uleb128 0x3c
 548 007e 0C       		.uleb128 0xc
 549 007f 00       		.byte	0
 550 0080 00       		.byte	0
 551 0081 09       		.uleb128 0x9
 552 0082 05       		.uleb128 0x5
 553 0083 00       		.byte	0
 554 0084 49       		.uleb128 0x49
 555 0085 13       		.uleb128 0x13
 556 0086 00       		.byte	0
 557 0087 00       		.byte	0
 558 0088 0A       		.uleb128 0xa
 559 0089 18       		.uleb128 0x18
 560 008a 00       		.byte	0
 561 008b 00       		.byte	0
 562 008c 00       		.byte	0
 563 008d 0B       		.uleb128 0xb
 564 008e 01       		.uleb128 0x1
 565 008f 01       		.byte	0x1
 566 0090 49       		.uleb128 0x49
 567 0091 13       		.uleb128 0x13
 568 0092 01       		.uleb128 0x1
 569 0093 13       		.uleb128 0x13
 570 0094 00       		.byte	0
 571 0095 00       		.byte	0
 572 0096 0C       		.uleb128 0xc
 573 0097 21       		.uleb128 0x21
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 13


 574 0098 00       		.byte	0
 575 0099 49       		.uleb128 0x49
 576 009a 13       		.uleb128 0x13
 577 009b 2F       		.uleb128 0x2f
 578 009c 0B       		.uleb128 0xb
 579 009d 00       		.byte	0
 580 009e 00       		.byte	0
 581 009f 0D       		.uleb128 0xd
 582 00a0 0F       		.uleb128 0xf
 583 00a1 00       		.byte	0
 584 00a2 0B       		.uleb128 0xb
 585 00a3 0B       		.uleb128 0xb
 586 00a4 49       		.uleb128 0x49
 587 00a5 13       		.uleb128 0x13
 588 00a6 00       		.byte	0
 589 00a7 00       		.byte	0
 590 00a8 0E       		.uleb128 0xe
 591 00a9 26       		.uleb128 0x26
 592 00aa 00       		.byte	0
 593 00ab 49       		.uleb128 0x49
 594 00ac 13       		.uleb128 0x13
 595 00ad 00       		.byte	0
 596 00ae 00       		.byte	0
 597 00af 00       		.byte	0
 598              		.section	.debug_loc,"",%progbits
 599              	.Ldebug_loc0:
 600              	.LLST0:
 601 0000 00000000 		.4byte	.LFB0-.Ltext0
 602 0004 02000000 		.4byte	.LCFI0-.Ltext0
 603 0008 0200     		.2byte	0x2
 604 000a 7D       		.byte	0x7d
 605 000b 00       		.sleb128 0
 606 000c 02000000 		.4byte	.LCFI0-.Ltext0
 607 0010 04000000 		.4byte	.LCFI1-.Ltext0
 608 0014 0200     		.2byte	0x2
 609 0016 7D       		.byte	0x7d
 610 0017 10       		.sleb128 16
 611 0018 04000000 		.4byte	.LCFI1-.Ltext0
 612 001c 06000000 		.4byte	.LCFI2-.Ltext0
 613 0020 0200     		.2byte	0x2
 614 0022 7D       		.byte	0x7d
 615 0023 28       		.sleb128 40
 616 0024 06000000 		.4byte	.LCFI2-.Ltext0
 617 0028 54010000 		.4byte	.LFE0-.Ltext0
 618 002c 0200     		.2byte	0x2
 619 002e 77       		.byte	0x77
 620 002f 28       		.sleb128 40
 621 0030 00000000 		.4byte	0
 622 0034 00000000 		.4byte	0
 623              		.section	.debug_aranges,"",%progbits
 624 0000 1C000000 		.4byte	0x1c
 625 0004 0200     		.2byte	0x2
 626 0006 00000000 		.4byte	.Ldebug_info0
 627 000a 04       		.byte	0x4
 628 000b 00       		.byte	0
 629 000c 0000     		.2byte	0
 630 000e 0000     		.2byte	0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 14


 631 0010 00000000 		.4byte	.Ltext0
 632 0014 54010000 		.4byte	.Letext0-.Ltext0
 633 0018 00000000 		.4byte	0
 634 001c 00000000 		.4byte	0
 635              		.section	.debug_line,"",%progbits
 636              	.Ldebug_line0:
 637 0000 76000000 		.section	.debug_str,"MS",%progbits,1
 637      02003800 
 637      00000201 
 637      FB0E0D00 
 637      01010101 
 638              	.LASF6:
 639 0000 6C6F6E67 		.ascii	"long long int\000"
 639      206C6F6E 
 639      6720696E 
 639      7400
 640              	.LASF17:
 641 000e 6D656173 		.ascii	"measureTemperature\000"
 641      75726554 
 641      656D7065 
 641      72617475 
 641      726500
 642              	.LASF2:
 643 0021 756E7369 		.ascii	"unsigned int\000"
 643      676E6564 
 643      20696E74 
 643      00
 644              	.LASF7:
 645 002e 72657443 		.ascii	"retCode\000"
 645      6F646500 
 646              	.LASF18:
 647 0036 73707269 		.ascii	"sprintf\000"
 647      6E746600 
 648              	.LASF11:
 649 003e 69734E65 		.ascii	"isNegative\000"
 649      67617469 
 649      766500
 650              	.LASF3:
 651 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 651      206C6F6E 
 651      6720756E 
 651      7369676E 
 651      65642069 
 652              	.LASF0:
 653 0060 756E7369 		.ascii	"unsigned char\000"
 653      676E6564 
 653      20636861 
 653      7200
 654              	.LASF13:
 655 006e 63686172 		.ascii	"char\000"
 655      00
 656              	.LASF14:
 657 0073 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 657      43313120 
 657      372E332E 
 657      31203230 
 657      31383036 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 15


 658 00a6 616E6368 		.ascii	"anch revision 261907] -mcpu=arm7tdmi -mthumb -mthum"
 658      20726576 
 658      6973696F 
 658      6E203236 
 658      31393037 
 659 00d9 622D696E 		.ascii	"b-interwork -gdwarf-2 -O0\000"
 659      74657277 
 659      6F726B20 
 659      2D676477 
 659      6172662D 
 660              	.LASF12:
 661 00f3 61707065 		.ascii	"appendHalf\000"
 661      6E644861 
 661      6C6600
 662              	.LASF16:
 663 00fe 433A5C45 		.ascii	"C:\\Embedded\\2138MiniDemo\\2138\000"
 663      6D626564 
 663      6465645C 
 663      32313338 
 663      4D696E69 
 664              	.LASF1:
 665 011c 73686F72 		.ascii	"short unsigned int\000"
 665      7420756E 
 665      7369676E 
 665      65642069 
 665      6E7400
 666              	.LASF4:
 667 012f 7369676E 		.ascii	"signed char\000"
 667      65642063 
 667      68617200 
 668              	.LASF9:
 669 013b 63686172 		.ascii	"charArray\000"
 669      41727261 
 669      7900
 670              	.LASF5:
 671 0145 73686F72 		.ascii	"short int\000"
 671      7420696E 
 671      7400
 672              	.LASF15:
 673 014f 6C6D3735 		.ascii	"lm75.c\000"
 673      2E6300
 674              	.LASF8:
 675 0156 72656164 		.ascii	"readTemperature\000"
 675      54656D70 
 675      65726174 
 675      75726500 
 676              	.LASF10:
 677 0166 63616C63 		.ascii	"calculatedValue\000"
 677      756C6174 
 677      65645661 
 677      6C756500 
 678              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 lm75.c
C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s:16     .rodata:00000000 $d
C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s:27     .text:00000000 measureTemperature
C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s:35     .text:00000000 $t
C:\Users\embedded\AppData\Local\Temp\cc0N8geU.s:249    .text:00000150 $d

UNDEFINED SYMBOLS
i2cRead
memset
sprintf
lcdPuts
